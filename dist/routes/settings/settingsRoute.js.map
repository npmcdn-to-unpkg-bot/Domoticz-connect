{"version":3,"sources":["routes/settings/settingsRoute.ts"],"names":["SettingsRoute","SettingsRoute.constructor","SettingsRoute.getSettings","SettingsRoute.storeSettings"],"mappings":";;;;;;;;;AAAA,qBAA8B,eAAe,CAAC,CAAA;AAC9C,gCAA8B,gDAAgD,CAAC,CAAA;AAE/E;IAaEA,uBAAqBA,gBAAgCA;QAAhCC,qBAAgBA,GAAhBA,gBAAgBA,CAAgBA;QAFrDA,WAAMA,GAAOA,EAAEA,CAACA;QAGdA,IAAIA,CAACA,KAAKA,GAAGA;YACXA,GAAGA,EAAEA,IAAIA;YACTA,QAAQA,EAAEA,IAAIA;YACdA,QAAQA,EAAEA,IAAIA;SACfA,CAACA;QAEFA,EAAEA,CAAAA,CAACA,IAAIA,CAACA,WAAWA,EAAEA,KAAKA,IAAIA,CAACA;YAC7BA,IAAIA,CAACA,KAAKA,GAAGA,IAAIA,CAACA,WAAWA,EAAEA,CAACA;IACpCA,CAACA;IAEDD,mCAAWA,GAAXA;QACEE,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAAEA,YAAYA,CAACA,OAAOA,CAACA,UAAUA,CAACA,CAAEA,CAACA;IACxDA,CAACA;IAEDF,qCAAaA,GAAbA;QACEG,OAAOA,CAACA,GAAGA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA;QACxBA,IAAIA,CAACA,MAAMA,CAACA,MAAMA,GAAGA,yBAAyBA,CAACA;QAC/CA,IAAIA,KAAKA,GAAGA,IAAIA,CAACA;QACjBA,8BAA8BA;QAC9BA,IAAIA,CAACA,gBAAgBA,CAACA,sBAAsBA,CAACA,IAAIA,CAACA,KAAKA,CAACA,GAAGA,EAAEA,IAAIA,CAACA,KAAKA,CAACA,QAAQA,EAAEA,IAAIA,CAACA,KAAKA,CAACA,QAAQA,CAACA,CAACA;QAEvGA,iBAAiBA;QACjBA,IAAIA,CAACA,gBAAgBA,CAACA,UAAUA,EAAEA,CAACA,SAASA,CAACA,UAASA,QAAQA;YAC5D,2CAA2C;YAC3C,EAAE,CAAA,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;gBACjC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACxB,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,iCAAiC,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;gBAClF,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YAChE,CAAC;QACH,CAAC,EAAEA,UAASA,KAAKA;YACf,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,6CAA6C,CAAC;QACtE,CAAC,CAACA,CAACA;IACLA,CAACA;IA9CHH;QAACA,gBAASA,CAACA;YACTA,QAAQA,EAAEA,gBAAgBA;SAC3BA,CAACA;QACDA,WAAIA,CAACA;YACJA,WAAWA,EAAEA,wBAAwBA;SACtCA,CAACA;;sBA0CDA;IAADA,oBAACA;AAADA,CA/CA,AA+CCA,IAAA;AAzCY,qBAAa,gBAyCzB,CAAA","file":"routes/settings/settingsRoute.js","sourcesContent":["import {Component, View} from 'angular2/core';\r\nimport {DomoticzService} from \"../../services/domoticzService/domoticzService\";\r\n\r\n@Component({\r\n  selector: 'settings-route'\r\n})\r\n@View({\r\n  templateUrl: 'settingsRoute.tpl.html'\r\n})\r\nexport class SettingsRoute{\r\n  url: string;\r\n  username: string;\r\n  password: string;\r\n  model:any;\r\n  status:any = {};\r\n\r\n  constructor (private domsoticzService:DomoticzService) {\r\n    this.model = {\r\n      url: null,\r\n      username: null,\r\n      password: null\r\n    };\r\n\r\n    if(this.getSettings() !== null)\r\n      this.model = this.getSettings();\r\n  }\r\n\r\n  getSettings() {\r\n    return JSON.parse( localStorage.getItem('settings') );\r\n  }\r\n\r\n  storeSettings() {\r\n    console.log(this.model);\r\n    this.status.update = 'Checking connection....';\r\n    var _this = this;\r\n    //update username and password\r\n    this.domsoticzService.setUserNameAndPassword(this.model.url, this.model.username, this.model.password);\r\n\r\n    //test connection\r\n    this.domsoticzService.getVersion().subscribe(function(response){\r\n      //if connection is good then store settings\r\n      if(response.json().Status = \"OK\") {\r\n        _this.status = response;\r\n        _this.status.update = 'Connected to Domoticz version: ' + response.json().version;\r\n        localStorage.setItem('settings', JSON.stringify(_this.model));\r\n      }\r\n    }, function(error){\r\n      _this.status.update = 'Could not connect, please check credentials';\r\n    });\r\n  }\r\n}"],"sourceRoot":"/src"}