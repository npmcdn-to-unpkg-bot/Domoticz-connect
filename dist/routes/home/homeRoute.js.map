{"version":3,"sources":["routes/home/homeRoute.ts"],"names":["HomeRoute","HomeRoute.constructor","HomeRoute.getDevices","HomeRoute.getPlans","HomeRoute.setActivePlan","HomeRoute.getDevicesForPlan"],"mappings":"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","file":"routes/home/homeRoute.js","sourcesContent":["import {Component, View} from 'angular2/core';\r\nimport {DomoticzService} from \"../../services/domoticzService/domoticzService\";\r\nimport {DeviceList} from \"../../components/deviceList/deviceList\";\r\n\r\n@Component({\r\n  selector: 'home-route'\r\n})\r\n@View({\r\n  templateUrl: 'homeRoute.tpl.html',\r\n  directives: [DeviceList]\r\n})\r\nexport class HomeRoute {\r\n  private domoticzSerivice:DomoticzService;\r\n  public plans:any = [];\r\n  public devicesByPlan:any = [];\r\n  public devices:any = [];\r\n  public activePlan:any = {meta: null};\r\n\r\n  constructor(domserv:DomoticzService) {\r\n    this.domoticzSerivice = domserv;\r\n    this.getPlans();\r\n  }\r\n\r\n  getDevices () {\r\n    var _this = this;\r\n    this.domoticzSerivice.getAllDevices().subscribe(function(res){\r\n      _this.devices = res.json().result;\r\n    })\r\n  }\r\n\r\n  getPlans () {\r\n    var _this = this;\r\n    //get devices for the default plan\r\n    this.getDevicesForPlan({\r\n      idx: 0,\r\n      Name: 'all'\r\n    });\r\n    this.domoticzSerivice.getAllPlans().subscribe(function(res){\r\n      if(res.json().status == \"OK\"){\r\n        _this.plans = res.json().result;\r\n        _this.plans.forEach(function(plan:any){\r\n          _this.getDevicesForPlan(plan);\r\n        });\r\n\r\n      } else {\r\n        _this.getPlans();\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  setActivePlan (idx) {\r\n    var activePlan = [];\r\n    var _this = this;\r\n    this.devicesByPlan.forEach(function(plan:any){\r\n      if(plan.meta.idx == idx)\r\n        _this.activePlan = plan;\r\n    });\r\n    return activePlan;\r\n  }\r\n\r\n  getDevicesForPlan (plan) {\r\n    var _this = this;\r\n    this.domoticzSerivice.getDevicesByPlan(plan.idx).subscribe(function(res){\r\n      var mergedPlan = {\r\n        meta: {},\r\n        result: {}\r\n      };\r\n      if(res.json().status == \"OK\") {\r\n        mergedPlan.meta = plan;\r\n        mergedPlan.result = res.json().result;\r\n        _this.devicesByPlan.push(mergedPlan);\r\n        if(_this.activePlan.meta == null)\r\n          _this.setActivePlan(plan.idx);\r\n\r\n      }\r\n    })\r\n  }\r\n}"],"sourceRoot":"/src"}