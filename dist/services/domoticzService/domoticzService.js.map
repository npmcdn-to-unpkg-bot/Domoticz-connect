{"version":3,"sources":["services/domoticzService/domoticzService.ts"],"names":["DomoticzService","DomoticzService.constructor","DomoticzService.getSettingsFromLocalStorage","DomoticzService.setUserNameAndPassword","DomoticzService.getAuthHeader","DomoticzService.getAuthorizationHeader","DomoticzService.getVersion","DomoticzService.getAllDevices","DomoticzService.getAllScenes","DomoticzService.getAllPlans","DomoticzService.getDevicesByPlan","DomoticzService.switchToState","DomoticzService.switchSceneToState","DomoticzService.dimLightToLevel"],"mappings":"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","file":"services/domoticzService/domoticzService.js","sourcesContent":["import {Http, Headers, Jsonp} from 'angular2/http';\r\nimport {Component} from \"angular2/core\";\r\nimport {Response} from \"angular2/http\";\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\n@Component({\r\n    providers: [Jsonp]\r\n})\r\n\r\nexport class DomoticzService {\r\n    private username:string = 'test';\r\n    private password:string = 'test';\r\n    private domoticzAdress:string = 'http://192.168.1.3:8080';\r\n    private jsonpCb = \"&jsoncallback=JSONP_CALLBACK\";\r\n    private jsonp:Jsonp;\r\n    private headers:Headers;\r\n\r\n    constructor (jsonp:Jsonp) {\r\n        console.log('starting service');\r\n        this.jsonp = jsonp;\r\n        this.getSettingsFromLocalStorage();\r\n    }\r\n\r\n    getSettingsFromLocalStorage () {\r\n        var settings = JSON.parse( localStorage.getItem('settings') );\r\n        if(settings !== null) {\r\n            this.username = settings.username;\r\n            this.password = settings.password;\r\n            this.domoticzAdress = settings.url;\r\n        }\r\n    }\r\n\r\n    setUserNameAndPassword (url:string, username:string, password:string) {\r\n        this.domoticzAdress = url;\r\n        this.username = username;\r\n        this.password = password;\r\n    }\r\n\r\n    // todo get header send with request\r\n    getAuthHeader () {\r\n        var authHeader = this.getAuthorizationHeader();\r\n        return new Headers({'Authorization' : authHeader});\r\n    }\r\n\r\n    getAuthorizationHeader () {\r\n        return \"Basic \" + window.btoa(this.username + \":\" + this.password);\r\n    }\r\n\r\n    getVersion ():Observable<Response> {\r\n        //http://nas.tomreinartz.com:81/json.htm?type=command&param=getversion\r\n        return this.jsonp.get(this.domoticzAdress + '/json.htm?type=command&param=getversion' + this.jsonpCb,{headers: this.getAuthHeader()} );\r\n    }\r\n\r\n    getAllDevices():Observable<Response> {\r\n        console.log('getting devices');\r\n        console.log(this.getAuthorizationHeader());\r\n        return this.jsonp.get(this.domoticzAdress + '/json.htm?type=devices&filter=all&used=true&order=Name' + this.jsonpCb, { headers: this.getAuthHeader() });\r\n    }\r\n\r\n    getAllScenes():Observable<Response> {\r\n        return this.jsonp.get(this.domoticzAdress + '/json.htm?type=scenes' + this.jsonpCb, {headers: this.getAuthHeader()});\r\n    }\r\n\r\n    getAllPlans():Observable<Response> {\r\n        return this.jsonp.get(this.domoticzAdress + '/json.htm?type=plans' + this.jsonpCb, {headers: this.getAuthHeader()});\r\n    }\r\n\r\n    getDevicesByPlan(planId:number):Observable<Response> {\r\n        return this.jsonp.get(this.domoticzAdress + '/json.htm?type=devices&filter=all&used=true&order=Name&plan=' + planId  + this.jsonpCb, {headers: this.getAuthHeader()});\r\n    }\r\n\r\n    /*\r\n     ** switchToState\r\n     * @param switchId:string idx of switch\r\n     * @param command:string 'On' or 'Off'\r\n     */\r\n    switchToState(switchId:string, command:string):Observable<Response>{\r\n        return this.jsonp.get(this.domoticzAdress + '/json.htm?type=command&param=switchlight&idx=' + switchId +\r\n            '&switchcmd=' + command + this.jsonpCb,\r\n            {headers: this.headers}\r\n        )\r\n    }\r\n\r\n    /*\r\n     ** switchToState\r\n     * @param sceneId:string idx of scene\r\n     * @param command:string 'On' or 'Off'\r\n     */\r\n    switchSceneToState(sceneId:string, command:string):Observable<Response>{\r\n        return this.jsonp.get(this.domoticzAdress + '/json.htm?type=command&param=switchscene&idx=' + sceneId +\r\n            '&switchcmd=' + command + this.jsonpCb,\r\n            {headers: this.headers}\r\n        )\r\n    }\r\n\r\n    /*\r\n     ** dimLightToLevel\r\n     * @param switchId:string idx of switch\r\n     * @param command:string 'On' or 'Off'\r\n     */\r\n    dimLightToLevel(switchId:string, level:string):Observable<Response>{\r\n        return this.jsonp.get(this.domoticzAdress + '/json.htm?type=command&param=switchlight&idx='+ switchId +\r\n            '&switchcmd=Set%20Level&level=' + level + this.jsonpCb,\r\n            {headers: this.headers}\r\n        )\r\n    }\r\n\r\n}"],"sourceRoot":"/src"}