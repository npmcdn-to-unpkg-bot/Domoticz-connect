{"version":3,"sources":["components/deviceList/deviceList.ts"],"names":["DeviceList","DeviceList.constructor","DeviceList.ngOnChanges","DeviceList.updateDeviceList","DeviceList.changeDeviceState"],"mappings":";;;;;;;;;AAAA,qBAAqC,eAAe,CAAC,CAAA;AAErD,mCAAiC,kCAAkC,CAAC,CAAA;AACpE,gCAA8B,gDAAgD,CAAC,CAAA;AAE/E;IAWEA,oBAAqBA,eAA+BA;QAA/BC,oBAAeA,GAAfA,eAAeA,CAAgBA;QAClDA,IAAIA,CAACA,OAAOA,GAAGA,EAAEA,CAACA;QAClBA,OAAOA,CAACA,GAAGA,CAACA,eAAeA,CAACA,CAAAA;IAC9BA,CAACA;IAEDD,gCAAWA,GAAXA,UAAYA,OAAUA;QACpBE,EAAEA,CAAAA,CAACA,OAAOA,IAAIA,CAACA,IAAIA,IAAIA,QAAQA,CAACA;YAC9BA,IAAIA,CAACA,gBAAgBA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;IACrCA,CAACA;IAEQF,qCAAgBA,GAAzBA,UAA2BA,OAAOA;QAChCG,IAAIA,IAAIA,GAASA,EAAEA,CAACA;QACpBA,OAAOA,CAACA,OAAOA,CAACA,UAASA,MAAUA;YAEjC,EAAE,CAAA,CAAC,MAAM,CAAC,IAAI,IAAI,OAAO,CAAC,CAAA,CAAC;gBACzB,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC;gBACvB,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;YACxB,CAAC;YAED,EAAE,CAAA,CAAC,MAAM,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;YAC1B,CAAC;YAED,EAAE,CAAA,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;gBACxB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC;YACxB,CAAC;YAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpB,CAAC,CAACA,CAACA;QACHA,IAAIA,CAACA,OAAOA,GAAGA,IAAIA,CAACA;IACtBA,CAACA;IAGMH,sCAAiBA,GAAxBA,UAA0BA,MAAMA;QAC9BI,EAAEA,CAAAA,CAACA,MAAMA,CAACA,SAASA,CAACA;YAClBA,MAAMA,CAACA;QACTA,IAAIA,QAAQA,GAAGA,IAAIA,CAACA;QACpBA,EAAEA,CAAAA,CAACA,MAAMA,CAACA,MAAMA,IAAIA,IAAIA,CAACA;YACvBA,QAAQA,GAAGA,KAAKA,CAACA;QAEnBA,OAAOA,CAACA,GAAGA,CAACA,MAAMA,CAACA,CAACA;QACxBA,sBAAsBA;QAClBA,EAAEA,CAAAA,CAACA,MAAMA,CAACA,IAAIA,IAAIA,OAAOA,CAACA,CAAAA,CAACA;QAG3BA,CAACA;QAACA,IAAIA,CAACA,CAACA;YACNA,6BAA6BA;YAE7BA,IAAIA,CAACA,eAAeA,CAACA,aAAaA,CAACA,MAAMA,CAACA,GAAGA,EAAEA,QAAQA,CAACA,CAACA,SAASA,CAACA,UAASA,QAAQA;gBAClF,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC7B,EAAE,CAAA,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,IAAI,IAAI,CAAC;oBAChC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;YAC7B,CAAC,CAACA,CAACA;QACLA,CAACA;IACHA,CAACA;IA1DDJ;QAACA,YAAKA,EAAEA;;OAACA,4BAAIA,UAAOA;IARtBA;QAACA,gBAASA,CAACA;YACTA,QAAQA,EAAEA,aAAaA;SACxBA,CAACA;QACDA,WAAIA,CAACA;YACJA,WAAWA,EAAEA,qBAAqBA;YAClCA,KAAKA,EAAEA,CAACA,uCAAkBA,CAACA;SAC5BA,CAACA;;mBA6DDA;IAADA,iBAACA;AAADA,CAnEA,AAmECA,IAAA;AA5DY,kBAAU,aA4DtB,CAAA","file":"components/deviceList/deviceList.js","sourcesContent":["import {Component, View, Input} from 'angular2/core';\r\nimport {OnChanges} from \"angular2/core\";\r\nimport {DeviceNameToMDIcon} from \"../../filters/deviceNameToMDIcon\";\r\nimport {DomoticzService} from \"../../services/domoticzService/domoticzService\";\r\n\r\n@Component({\r\n  selector: 'device-list'\r\n})\r\n@View({\r\n  templateUrl: 'deviceList.tpl.html',\r\n  pipes: [DeviceNameToMDIcon]\r\n})\r\nexport class DeviceList implements OnChanges {\r\n  @Input() list:any[];\r\n  public devices:any[];\r\n\r\n  constructor (private domoticzService:DomoticzService) {\r\n    this.devices = [];\r\n    console.log('list is ready')\r\n  }\r\n\r\n  ngOnChanges(changes:{}):any {\r\n    if(typeof this.list == 'object')\r\n      this.updateDeviceList(this.list);\r\n  }\r\n\r\n  private  updateDeviceList (devices) {\r\n    var list:any[] = [];\r\n    devices.forEach(function(device:any){\r\n\r\n      if(device.Type == \"Scene\"){\r\n        device.Image = \"Scene\";\r\n        device.Status = \"Off\";\r\n      }\r\n\r\n      if(device.Type == \"General\") {\r\n        device.Protected = true;\r\n      }\r\n\r\n      if(device.Type == \"Temp\") {\r\n        device.Protected = true;\r\n        device.Image = \"Temp\";\r\n      }\r\n\r\n      list.push(device);\r\n    });\r\n    this.devices = list;\r\n  }\r\n\r\n\r\n  public changeDeviceState (device) {\r\n    if(device.Protected) //used to disable interaction via app\r\n      return;\r\n    var switchTo = \"On\";\r\n    if(device.Status == \"On\")\r\n      switchTo = \"Off\";\r\n\r\n    console.log(device);\r\n//if device is a Scene\r\n    if(device.Type == \"Scene\"){\r\n\r\n\r\n    } else {\r\n      //if device if something else\r\n\r\n      this.domoticzService.switchToState(device.idx, switchTo).subscribe(function(response){\r\n        console.log(response.json());\r\n        if(response.json().status == \"OK\")\r\n          device.Status = switchTo;\r\n      });\r\n    }\r\n  }\r\n}"],"sourceRoot":"/src"}